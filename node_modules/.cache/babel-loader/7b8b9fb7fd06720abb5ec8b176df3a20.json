{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\src\\\\components\\\\2019Graphs\\\\Sheet6to8Q3.js\";\nimport React from 'react';\nimport Chart from \"../../utils/chart\";\nimport * as d3 from \"d3\";\nvar data = [];\nvar dataNeed = [];\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\n.then(makeChart); // converts into an array then call makeChart() function\n// calls function to make a chart after it has been converted into an array\n\nfunction makeChart(students) {\n  // takes in an array of students\n  //make dictionary for tutorial sheets - put in same order as csv\n  var progressScores = [];\n  var ExamResults = [];\n  var dictSheet = {\n    Sheet18: [],\n    Sheet17: [],\n    Sheet16: [],\n    Sheet15: [],\n    Sheet14: [],\n    Sheet13: [],\n    Sheet12: [],\n    Sheet11: [],\n    Sheet10: [],\n    Sheet9: [],\n    Sheet8: [],\n    Sheet7: [],\n    Sheet6: [],\n    Sheet5: [],\n    Sheet4: [],\n    Sheet3: [],\n    Sheet2: [],\n    Sheet1: []\n  };\n  var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\n\n  var dictPercentile = {\n    P18: [],\n    P17: [],\n    P16: [],\n    P15: [],\n    P14: [],\n    P13: [],\n    P12: [],\n    P11: [],\n    P10: [],\n    P9: [],\n    P8: [],\n    P7: [],\n    P6: [],\n    P5: [],\n    P4: [],\n    P3: [],\n    P2: [],\n    P1: []\n  };\n  var PercentAvgSheet1to9 = [];\n  var DaysAfterLectMeanSheet1to9 = [];\n  var Sheet1to9SD = [];\n  var Percentile1to9SD = []; //All year\n\n  var PercentAvgAll = [];\n  var DaysAfterLectMeanAll = [];\n  var AllSD = [];\n  var PercentileAllSD = []; // for loop to check and calculate the days after lecture when students started tutorial sheet\n\n  for (var i = 0; i < students.length; i++) {\n    var count = -1;\n    var LectureCount = 0;\n    var progressKey = Object.keys(students[i])[104];\n    var progressScoremaybe = students[i][progressKey];\n    progressScores.push(parseFloat(progressScoremaybe));\n    var ExamKey = Object.keys(students[i])[105];\n    var ExamScoremaybe = students[i][ExamKey];\n    ExamResults.push(parseFloat(ExamScoremaybe));\n\n    for (var j = 9; j <= 95; j += 5) {\n      var key = Object.keys(students[i])[j]; // access title of start times\n\n      var value = students[i][key]; // gives date in raw form\n      // console.log(\"Raw form date\" + \" \" + value)\n      //convert date string into a time object\n\n      var date = new Date(value); // console.log(\"date\" + \" \" + date)\n\n      var DayNumber = dayOfYear(date); // console.log(\"day number is\" + \" \" + DayNumber)\n      //need to account for imperial calendar with 3rd october as week 1\n\n      if (value !== 0) {\n        count++;\n      } else {\n        continue;\n      }\n\n      if (value === \"\") {\n        DayNumber = 158;\n      } else if (dayOfYear(date) >= 280) {\n        DayNumber -= 280;\n      } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1) {\n        DayNumber += 71;\n      } else {\n        DayNumber += 78;\n      }\n\n      key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\n\n      dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\n      LectureCount++;\n    }\n  }\n\n  ; //create percentiles\n\n  for (var i = 0; i < Object.keys(dictPercentile).length; i++) {\n    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\n\n    var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\n\n    for (var j = 0; j <= students.length; j++) {\n      count = 0;\n\n      for (var z = 0; z <= students.length; z++) {\n        if (dictSheet[key2][z] >= dictSheet[key2][j]) {\n          count++;\n        }\n      }\n\n      dictPercentile[key][j] = count / students.length * 100;\n    }\n  }\n\n  ; // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \n\n  for (var i = 0; i < Object.keys(dictPercentile).length; i++) {\n    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\n\n    key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\n\n    for (var j = 0; j <= students.length; j++) {\n      count = 0;\n\n      for (var z = 0; z <= students.length; z++) {\n        if (dictSheet[key2][z] >= dictSheet[key2][j]) {\n          count++;\n        }\n      }\n\n      dictPercentile[key][j] = count / students.length * 100;\n    }\n  }\n\n  ;\n  var dictSheetArray = [];\n  var dictPercentileArray = []; // console.log(Object.values(dictPercentile.P1))\n  // for all sheets use: Object.keys(dictSheet).length instead of 8\n\n  for (var i = 0; i < 9; i++) {\n    dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]]);\n    dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]]);\n  } //Calculating mean of sheets, mean of percentiles, SD of sheets\n\n\n  var dictSheetTranspose = dictSheetArray[0].map(function (_, colIndex) {\n    return dictSheetArray.map(function (row) {\n      return row[colIndex];\n    });\n  });\n  var dictPercentileTranspose = dictPercentileArray[0].map(function (_, colIndex) {\n    return dictPercentileArray.map(function (row) {\n      return row[colIndex];\n    });\n  });\n\n  for (var i = 0; i < dictSheetTranspose.length; i++) {\n    DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]));\n    PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]));\n    Sheet1to9SD.push(getSD(dictSheetTranspose[i]));\n    Percentile1to9SD.push(getSD(dictPercentileTranspose[i]));\n  } //need to convert into single array of objects\n\n\n  var data = progressScores.map(function (x, i) {\n    return {\n      x: x,\n      y: PercentAvgSheet1to9[i]\n    };\n  });\n\n  for (var i = 0; i < data.length; i++) {\n    dataNeed.push(data[i]);\n  }\n} //function to work out week of the year\n\n\nvar weekOfYear = function weekOfYear(date) {\n  var d = new Date(+date);\n  d.setHours(0, 0, 0);\n  d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n  return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7);\n}; //function to work out the current day of the year\n\n\nDate.prototype.isLeapYear = function () {\n  var year = this.getFullYear();\n  if ((year & 3) != 0) return false;\n  return year % 100 != 0 || year % 400 == 0;\n}; // Get Day of Year\n\n\nDate.prototype.getDOY = function () {\n  var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n  var mn = this.getMonth();\n  var dn = this.getDate();\n  var dayOfYear = dayCount[mn] + dn;\n  if (mn > 1 && this.isLeapYear()) dayOfYear++;\n  return dayOfYear;\n};\n\nvar dayOfYear = function dayOfYear(date) {\n  return Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\n};\n\nfunction sortNumber(a, b) {\n  return a - b;\n}\n\nfunction quantile(array, percentile) {\n  array.sort(sortNumber);\n  var index = percentile / 100. * (array.length - 1);\n\n  if (Math.floor(index) == index) {\n    var result = array[index];\n  } else {\n    var i = Math.floor(index);\n    var fraction = index - i;\n    result = array[i] + (array[i + 1] - array[i]) * fraction;\n  }\n\n  return result;\n} // calculate sum\n\n\nfunction sumArr(arr) {\n  var a = arr.slice();\n  return a.reduce(function (a, b) {\n    return parseFloat(a) + parseFloat(b);\n  });\n} //calculate average\n\n\nfunction calcAverage(arr) {\n  var a = arr.slice();\n\n  if (a.length) {\n    var sum = sumArr(a);\n    var avg = sum / a.length;\n    return avg;\n  }\n\n  return false;\n} // Standard deviation\n\n\nfunction getSD(data) {\n  var m = calcAverage(data);\n  return Math.sqrt(data.reduce(function (sq, n) {\n    return sq + Math.pow(n - m, 2);\n  }, 0) / (data.length - 1));\n}\n\n;\n\nvar Sheet6to82k19 = /*#__PURE__*/function (_React$Component) {\n  _inherits(Sheet6to82k19, _React$Component);\n\n  function Sheet6to82k19(props) {\n    var _this;\n\n    _classCallCheck(this, Sheet6to82k19);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sheet6to82k19).call(this, props));\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Sheet6to82k19, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _ref;\n\n      this.myChart = new Chart(this.canvasRef.current, {\n        type: 'scatter',\n        data: {\n          datasets: [(_ref = {\n            //input data\n            label: 'Sheet6-8=Q3 Percentile for when sheet was first looked at vs Total progress marks',\n            data: dataNeed,\n            trendlineLinear: {\n              style: \"rgb(0 ,0 ,0)\",\n              lineStyle: \"solid\",\n              width: 3\n            },\n            backgroundColor: '#0000cc',\n            borderColor: '#0000cc',\n            borderWidth: 1\n          }, _defineProperty(_ref, \"borderColor\", '#0000cc'), _defineProperty(_ref, \"hoverBorderWidth\", 3), _defineProperty(_ref, \"hoverBorderColor\", '#00'), _defineProperty(_ref, \"fill\", false), _defineProperty(_ref, \"showLine\", false), _ref)]\n        },\n        options: {\n          title: {\n            display: true,\n            text: 'Sheet6-8 Percentile for when sheet was first looked (Q3) at vs Total progress marks for 2019',\n            fontSize: 25\n          },\n          scales: {\n            xAxes: [{\n              display: true,\n              scaleLabel: {\n                display: true,\n                labelString: 'Progress Test Score Marks(%)'\n              }\n            }],\n            yAxes: [{\n              display: true,\n              scaleLabel: {\n                display: true,\n                labelString: 'Percentile Of Start times after Lecture for Sheet 6-8'\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          legend: {\n            //display: flase, doesn't display legend\n            position: 'right',\n            display: false,\n            labels: {\n              fontColor: '#000'\n            }\n          },\n          layout: {\n            padding: {\n              left: 50,\n              right: 50,\n              bottom: 0,\n              top: 0\n            }\n          } // tooltips:{ to hide tooltips that show when hovering over graph\n          //     enabled: false\n          // },\n\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 14\n        }\n      });\n    }\n  }]);\n\n  return Sheet6to82k19;\n}(React.Component);\n\nexport default Sheet6to82k19;","map":{"version":3,"sources":["C:/Users/Emman/Documents/ME4/FYP/FinalDash/shards-dashboard-react/src/components/2019Graphs/Sheet6to8Q3.js"],"names":["React","Chart","d3","data","dataNeed","csv","then","makeChart","students","progressScores","ExamResults","dictSheet","Sheet18","Sheet17","Sheet16","Sheet15","Sheet14","Sheet13","Sheet12","Sheet11","Sheet10","Sheet9","Sheet8","Sheet7","Sheet6","Sheet5","Sheet4","Sheet3","Sheet2","Sheet1","LectureDate","dictPercentile","P18","P17","P16","P15","P14","P13","P12","P11","P10","P9","P8","P7","P6","P5","P4","P3","P2","P1","PercentAvgSheet1to9","DaysAfterLectMeanSheet1to9","Sheet1to9SD","Percentile1to9SD","PercentAvgAll","DaysAfterLectMeanAll","AllSD","PercentileAllSD","i","length","count","LectureCount","progressKey","Object","keys","progressScoremaybe","push","parseFloat","ExamKey","ExamScoremaybe","j","key","value","date","Date","DayNumber","dayOfYear","Math","abs","key2","z","dictSheetArray","dictPercentileArray","dictSheetTranspose","map","_","colIndex","row","dictPercentileTranspose","calcAverage","getSD","x","y","weekOfYear","d","setHours","setDate","getDate","getDay","ceil","getFullYear","prototype","isLeapYear","year","getDOY","dayCount","mn","getMonth","dn","floor","sortNumber","a","b","quantile","array","percentile","sort","index","result","fraction","sumArr","arr","slice","reduce","sum","avg","m","sqrt","sq","n","pow","Sheet6to82k19","props","canvasRef","createRef","myChart","current","type","datasets","label","trendlineLinear","style","lineStyle","width","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","scales","xAxes","scaleLabel","labelString","yAxes","maintainAspectRatio","legend","position","labels","fontColor","layout","padding","left","right","bottom","top","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\n\r\nvar data =[];\r\nvar dataNeed = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/FMX2_Gradebook_2019_20_Mobius_Plus_Exam_and_PT_anonymousedAWS.csv\") // request csv file\r\n            .then(makeChart); // converts into an array then call makeChart() function\r\n\r\n        // calls function to make a chart after it has been converted into an array\r\n        function makeChart(students) { // takes in an array of students\r\n\r\n                //make dictionary for tutorial sheets - put in same order as csv\r\n                var progressScores = [];\r\n                var ExamResults = [];\r\n                var dictSheet = {Sheet18:[] , Sheet17:[] , Sheet16:[] ,Sheet15:[], Sheet14:[], Sheet13:[], Sheet12:[], Sheet11:[], Sheet10:[], Sheet9:[], Sheet8:[], Sheet7:[], Sheet6:[], Sheet5:[], Sheet4:[], Sheet3:[], Sheet2:[], Sheet1:[]};\r\n                var LectureDate = [140, 133, 126, 112, 105, 98, 91, 84, 77, 56, 49, 42, 35, 28, 21, 14, 7, 0]; //make an array of lecture start dates\r\n                var dictPercentile = {P18:[] , P17:[] , P16:[] ,P15:[], P14:[], P13:[], P12:[], P11:[], P10:[], P9:[], P8:[], P7:[], P6:[], P5:[], P4:[], P3:[], P2:[], P1:[]};\r\n                var PercentAvgSheet1to9 = [];\r\n                var DaysAfterLectMeanSheet1to9 = [];\r\n                var Sheet1to9SD = [];\r\n                var Percentile1to9SD = [];\r\n                //All year\r\n                var PercentAvgAll = [];\r\n                var DaysAfterLectMeanAll = [];\r\n                var AllSD = [];\r\n                var PercentileAllSD = [];\r\n                // for loop to check and calculate the days after lecture when students started tutorial sheet\r\n                for (var i =0; i < students.length; i++){\r\n                    var count = -1;\r\n                    var LectureCount = 0;\r\n                    var progressKey = Object.keys(students[i])[104];\r\n                    var progressScoremaybe = students[i][progressKey];\r\n                    progressScores.push(parseFloat(progressScoremaybe));\r\n                    var ExamKey = Object.keys(students[i])[105];\r\n                    var ExamScoremaybe = students[i][ExamKey];\r\n                    ExamResults.push(parseFloat(ExamScoremaybe));\r\n                    for (var j =9; j <= 95; j += 5){\r\n                        var key = Object.keys(students[i])[j]; // access title of start times\r\n                        var value = students[i][key] // gives date in raw form\r\n                                 // console.log(\"Raw form date\" + \" \" + value)\r\n                        //convert date string into a time object\r\n                        var date = new Date(value);\r\n                                // console.log(\"date\" + \" \" + date)\r\n                        var DayNumber = dayOfYear(date);\r\n                                // console.log(\"day number is\" + \" \" + DayNumber)\r\n                        //need to account for imperial calendar with 3rd october as week 1\r\n                        if (value !== 0){\r\n                            count ++;\r\n                        } else{\r\n                            continue\r\n                        }\r\n                        if (value === \"\"){\r\n                            DayNumber = 158\r\n                        }\r\n                        else if (dayOfYear(date) >= 280){\r\n                            DayNumber -= 280;\r\n                        } else if (dayOfYear(date) < 48 && dayOfYear(date) >= 1)  {\r\n                            DayNumber += 71;\r\n                        } else {\r\n                            DayNumber += 78\r\n                        }\r\n                        key = Object.keys(dictSheet)[count]; //accesses tutorial sheet dictionary\r\n                        dictSheet[key][i] = Math.abs(DayNumber - LectureDate[LectureCount]);\r\n                        LectureCount ++\r\n                    }\r\n                };\r\n\r\n                //create percentiles\r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    var key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                // working out Mean of sheet time after exam, standard deviation of sheet time after exam, Mean of percentiles, \r\n                for (var i =0; i < Object.keys(dictPercentile).length; i++){\r\n                    key = Object.keys(dictPercentile)[i]; //accesses tutorial sheet dictionary\r\n                    key2 = Object.keys(dictSheet)[i]; //accesses tutorial sheet dictionary\r\n                    for (var j =0; j <= students.length; j ++){\r\n                        count = 0;\r\n                        for(var z=0; z <= students.length; z++){\r\n                            if (dictSheet[key2][z] >= dictSheet[key2][j]){\r\n                                count ++\r\n                            } \r\n                        }\r\n                        dictPercentile[key][j] = (count/students.length)*100;\r\n                    }\r\n                };\r\n\r\n                var dictSheetArray = [];\r\n                var dictPercentileArray = [];\r\n                // console.log(Object.values(dictPercentile.P1))\r\n\r\n                // for all sheets use: Object.keys(dictSheet).length instead of 8\r\n                for(var i=0; i < 9; i++){\r\n                    dictSheetArray.push(dictSheet[Object.keys(dictSheet)[i]])\r\n                    dictPercentileArray.push(dictPercentile[Object.keys(dictPercentile)[i]])\r\n                }\r\n\r\n                //Calculating mean of sheets, mean of percentiles, SD of sheets\r\n                var dictSheetTranspose =  dictSheetArray[0].map((_, colIndex) => dictSheetArray.map(row => row[colIndex]));\r\n                var dictPercentileTranspose = dictPercentileArray[0].map((_, colIndex) => dictPercentileArray.map(row => row[colIndex]));\r\n                for(var i=0; i<dictSheetTranspose.length; i++){\r\n                    DaysAfterLectMeanSheet1to9.push(calcAverage(dictSheetTranspose[i]))\r\n                    PercentAvgSheet1to9.push(calcAverage(dictPercentileTranspose[i]))\r\n                    Sheet1to9SD.push(getSD(dictSheetTranspose[i]))\r\n                    Percentile1to9SD.push(getSD(dictPercentileTranspose[i]))\r\n                }\r\n                //need to convert into single array of objects\r\n\r\n                const data = progressScores.map((x, i) => {\r\n                return {\r\n                    x: x,\r\n                    y: PercentAvgSheet1to9[i]\r\n                };\r\n    });\r\n    for (var i =0; i< data.length; i++){\r\n        dataNeed.push(data[i])\r\n    }\r\n}\r\n\r\n\r\n    //function to work out week of the year\r\n    var weekOfYear = function(date){\r\n        var d = new Date(+date);\r\n        d.setHours(0,0,0);\r\n        d.setDate(d.getDate()+4-(d.getDay()||7));\r\n        return Math.ceil((((d-new Date(d.getFullYear(),0,1))/8.64e7)+1)/7);\r\n    };\r\n\r\n    //function to work out the current day of the year\r\n    Date.prototype.isLeapYear = function() {\r\n        var year = this.getFullYear();\r\n        if((year & 3) != 0) return false;\r\n        return ((year % 100) != 0 || (year % 400) == 0);\r\n    };\r\n\r\n// Get Day of Year\r\n    Date.prototype.getDOY = function() {\r\n        var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n        var mn = this.getMonth();\r\n        var dn = this.getDate();\r\n        var dayOfYear = dayCount[mn] + dn;\r\n        if(mn > 1 && this.isLeapYear()) dayOfYear++;\r\n        return dayOfYear;\r\n    };\r\n\r\n    const dayOfYear = date =>\r\n    Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\r\n\r\n\r\n    function sortNumber(a,b) {\r\n        return a - b;\r\n    }\r\n\r\n    function quantile(array, percentile) {\r\n        array.sort(sortNumber);\r\n        var index = percentile/100. * (array.length-1);\r\n        if (Math.floor(index) == index) {\r\n            var result = array[index];\r\n        } else {\r\n            var i = Math.floor(index)\r\n            var fraction = index - i;\r\n            result = array[i] + (array[i+1] - array[i]) * fraction;\r\n        }\r\n        return result;\r\n    }\r\n\r\n// calculate sum\r\n    function sumArr(arr){\r\n        var a = arr.slice();\r\n        return a.reduce(function(a, b) { return parseFloat(a) + parseFloat(b); });\r\n    }\r\n\r\n    //calculate average\r\n    function calcAverage(arr){\r\n        var a = arr.slice();\r\n        if (a.length){\r\n            var sum = sumArr(a);\r\n            var avg = sum / a.length;\r\n            return avg;\r\n        }    \r\n        return false;\r\n    }\r\n\r\n    // Standard deviation\r\n    function getSD(data) {\r\n        let m = calcAverage(data);\r\n        return Math.sqrt(data.reduce(function (sq, n) {\r\n                return sq + Math.pow(n - m, 2);\r\n            }, 0) / (data.length - 1));\r\n    };\r\n\r\nclass Sheet6to82k19 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'scatter',\r\n        data: {\r\n            datasets: [{ //input data\r\n                label: 'Sheet6-8=Q3 Percentile for when sheet was first looked at vs Total progress marks',\r\n                data: dataNeed, \r\n                trendlineLinear: {\r\n                    style: \"rgb(0 ,0 ,0)\",\r\n                    lineStyle: \"solid\",\r\n                    width: 3\r\n                },\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#0000cc',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00',\r\n                fill : false,\r\n                showLine: false\r\n            },\r\n        ]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Sheet6-8 Percentile for when sheet was first looked (Q3) at vs Total progress marks for 2019',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Progress Test Score Marks(%)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Percentile Of Start times after Lecture for Sheet 6-8'\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n        }\r\n        \r\n    });\r\n}\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default Sheet6to82k19;\r\n"]},"metadata":{},"sourceType":"module"}