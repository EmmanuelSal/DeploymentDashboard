{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\src\\\\components\\\\blog\\\\UsersOverview.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\nimport Chart from \"../../utils/chart\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport * as d3 from \"d3\";\nimport chartTrendline from \"chartjs-plugin-trendline\";\nChart.plugins.register(chartTrendline);\nvar subButton = document.getElementById('subButton');\nsubButton.addEventListener('click', getUserName, false);\n\nfunction getUserName() {\n  var nameField = document.getElementById('nameField').value;\n  var result = document.getElementById('result');\n  var myChart = document.getElementById('myChart').getContext('2d');\n  d3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/Y1_all_20210409_anonymous.csv\") // request csv file\n  .then(makeChart); // converts into an array then call makeChart() function\n  // calls function to make a chart after it has been converted into an array\n\n  function makeChart(students) {\n    // }\n    //make dictionary for tutorial sheets - put in same order as csv\n    var ColumnTitle = [];\n\n    for (var i = 14; i < Object.keys(students[0]).length - 11; i++) {\n      ColumnTitle.push(Object.keys(students[0])[i]);\n    }\n\n    var Scores = []; // for loop to check and calculate the days after lecture when students started tutorial sheet\n\n    for (var i = 0; i < students.length; i++) {\n      if (students[i][\"Student ID\"] === nameField) {\n        for (var j = 14; j < Object.values(students[i]).length - 11; j++) {\n          Scores.push(Object.values(students[i])[j]);\n        } //need to store all column title: value\n        //then need column title in a single array and values in another array\n\n      }\n    }\n\n    ;\n  }\n}\n\nvar UsersOverview = /*#__PURE__*/function (_React$Component) {\n  _inherits(UsersOverview, _React$Component);\n\n  function UsersOverview(props) {\n    var _this;\n\n    _classCallCheck(this, UsersOverview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UsersOverview).call(this, props));\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(UsersOverview, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.myChart = new Chart(this.canvasRef.current, _defineProperty({\n        type: 'scatter',\n        data: {\n          labels: ColumnTitle,\n          datasets: [{\n            label: 'Average Progress Mark',\n            data: Scores,\n            backgroundColor: ['#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc'],\n            borderColor: ['#0000cc'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: false,\n          scales: {\n            xAxes: [{\n              ticks: {\n                maxRotation: 90,\n                minRotation: 80\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }\n      }, \"options\", {\n        title: {\n          display: true,\n          text: 'Average time taken in days after lecture to Complete All Tutorial Sheets',\n          fontSize: 25\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Progress Test Score Marks(%)'\n            }\n          }],\n          yAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Frequency'\n            }\n          }]\n        },\n        maintainAspectRatio: false,\n        legend: {\n          //display: flase, doesn't display legend\n          position: 'right',\n          display: false,\n          labels: {\n            fontColor: '#000'\n          }\n        },\n        layout: {\n          padding: {\n            left: 50,\n            right: 50,\n            bottom: 0,\n            top: 0\n          }\n        } // tooltips:{ to hide tooltips that show when hovering over graph\n        //     enabled: false\n        // },\n\n      }));\n      var BlogUsersOverview = new Chart(this.canvasRef.current, {\n        type: \"LineWithLine\",\n        data: this.props.chartData,\n        options: chartOptions\n      }); // They can still be triggered on hover.\n\n      var buoMeta = BlogUsersOverview.getDatasetMeta(0);\n      buoMeta.data[0]._model.radius = 0;\n      buoMeta.data[this.props.chartData.datasets[0].data.length - 1]._model.radius = 0; // Render the chart.\n\n      BlogUsersOverview.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var title = this.props.title;\n      return /*#__PURE__*/React.createElement(Card, {\n        small: true,\n        className: \"h-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, title)), /*#__PURE__*/React.createElement(CardBody, {\n        className: \"pt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"border-bottom py-2 bg-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"6\",\n        className: \"d-flex mb-2 mb-sm-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(RangeDatePicker, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"sm\",\n        className: \"d-flex btn-white ml-auto mr-auto ml-sm-auto mr-sm-0 mt-3 mt-sm-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }, \"View Full Report \\u2192\"))), /*#__PURE__*/React.createElement(\"canvas\", {\n        height: \"120\",\n        ref: this.canvasRef,\n        style: {\n          maxWidth: \"100% !important\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return UsersOverview;\n}(React.Component);\n\nexport default UsersOverview;","map":{"version":3,"sources":["C:/Users/Emman/Documents/ME4/FYP/FinalDash/shards-dashboard-react/src/components/blog/UsersOverview.js"],"names":["React","PropTypes","Row","Col","Card","CardHeader","CardBody","Button","Chart","RangeDatePicker","d3","chartTrendline","plugins","register","subButton","document","getElementById","addEventListener","getUserName","nameField","value","result","myChart","getContext","csv","then","makeChart","students","ColumnTitle","i","Object","keys","length","push","Scores","j","values","UsersOverview","props","canvasRef","createRef","current","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","scales","xAxes","ticks","maxRotation","minRotation","yAxes","beginAtZero","title","display","text","fontSize","scaleLabel","labelString","maintainAspectRatio","legend","position","fontColor","layout","padding","left","right","bottom","top","BlogUsersOverview","chartData","chartOptions","buoMeta","getDatasetMeta","_model","radius","render","maxWidth","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\nimport Chart from \"../../utils/chart\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport * as d3 from \"d3\";\nimport chartTrendline from \"chartjs-plugin-trendline\";\nChart.plugins.register(chartTrendline);\n\n\n\n\nvar subButton = document.getElementById('subButton');\n        subButton.addEventListener('click', getUserName, false); \n\n        function getUserName() {\n            var nameField = document.getElementById('nameField').value;\n            var result = document.getElementById('result');\n\n            let myChart = document.getElementById('myChart').getContext('2d');\n\n            d3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/Y1_all_20210409_anonymous.csv\") // request csv file\n            .then(makeChart); // converts into an array then call makeChart() function\n\n            // calls function to make a chart after it has been converted into an array\n            function makeChart(students) { \n                    // }\n                    //make dictionary for tutorial sheets - put in same order as csv\n                    var ColumnTitle = [];\n                    for (var i=14; i<Object.keys(students[0]).length - 11; i++){\n                        ColumnTitle.push(Object.keys(students[0])[i])\n                    }\n                    var Scores = [];\n                    // for loop to check and calculate the days after lecture when students started tutorial sheet\n                    for (var i =0; i < students.length; i++){\n                        if (students[i][\"Student ID\"] === nameField){\n                            for (var j=14; j<Object.values(students[i]).length - 11; j++){\n                                Scores.push(Object.values(students[i])[j])\n                            }\n                                //need to store all column title: value\n                                //then need column title in a single array and values in another array\n                        } \n                    };\n                  }\n                }\n\nclass UsersOverview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'scatter',\n      data: {\n        labels: ColumnTitle,\n        datasets: [{\n        label: 'Average Progress Mark',\n        data: Scores,\n        backgroundColor: [\n            '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc'\n\n        ],\n        borderColor: [\n            '#0000cc',\n        ],\n        borderWidth: 1\n        }]\n    },\n    options: {\n        responsive: false,\n        scales: {\n        xAxes: [{\n            ticks: {\n            maxRotation: 90,\n            minRotation: 80\n            }\n        }],\n        yAxes: [{\n            ticks: {\n            beginAtZero: true\n            }\n        }]\n        }\n    },\n    options: {\n        title: {\n            display: true,\n            text: 'Average time taken in days after lecture to Complete All Tutorial Sheets',\n            fontSize: 25\n        },\n        scales: {\n            xAxes: [{\n                display: true,\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Progress Test Score Marks(%)'\n                }\n            }],\n            yAxes: [{\n                display: true,\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Frequency'\n                }\n            }]\n        },\n        maintainAspectRatio: false,\n        legend: {\n            //display: flase, doesn't display legend\n            position: 'right',\n            display: false,\n            labels: {\n                fontColor: '#000'\n            }\n        },\n        layout: {\n            padding: {\n                left: 50,\n                right: 50,\n                bottom: 0,\n                top:0\n            }\n        },\n        // tooltips:{ to hide tooltips that show when hovering over graph\n        //     enabled: false\n        // },\n    }\n    \n});\n    const BlogUsersOverview = new Chart(this.canvasRef.current, {\n      type: \"LineWithLine\",\n      data: this.props.chartData,\n      options: chartOptions\n    });\n\n    // They can still be triggered on hover.\n    const buoMeta = BlogUsersOverview.getDatasetMeta(0);\n    buoMeta.data[0]._model.radius = 0;\n    buoMeta.data[\n      this.props.chartData.datasets[0].data.length - 1\n    ]._model.radius = 0;\n\n    // Render the chart.\n    BlogUsersOverview.render();\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n        </CardHeader>\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"d-flex mb-2 mb-sm-0\">\n              <RangeDatePicker />\n            </Col>\n            <Col>\n              <Button\n                size=\"sm\"\n                className=\"d-flex btn-white ml-auto mr-auto ml-sm-auto mr-sm-0 mt-3 mt-sm-0\"\n              >\n                View Full Report &rarr;\n              </Button>\n            </Col>\n          </Row>\n          <canvas\n            height=\"120\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default UsersOverview;\n"]},"metadata":{},"sourceType":"module"}