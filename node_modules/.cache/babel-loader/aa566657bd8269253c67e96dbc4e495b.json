{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\src\\\\components\\\\blog\\\\UsersOverview.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport Chart from \"../../utils/chart\"; // function getUserName() {\n//   var nameField = document.getElementById('nameField').value;\n//   var result = document.getElementById('result');\n//   let myChart = document.getElementById('myChart').getContext('2d');\n\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/Y1_all_20210409_anonymous.csv\") // request csv file\n.then(makeChart); // converts into an array then call makeChart() function\n// calls function to make a chart after it has been converted into an array\n\nfunction makeChart(students) {\n  // }\n  //make dictionary for tutorial sheets - put in same order as csv\n  var ColumnTitle = [];\n\n  for (var i = 14; i < Object.keys(students[0]).length - 11; i++) {\n    ColumnTitle.push(Object.keys(students[0])[i]);\n  }\n\n  var Scores = []; // for loop to check and calculate the days after lecture when students started tutorial sheet\n\n  for (var i = 0; i < students.length; i++) {\n    if (students[i][\"Student ID\"] === nameField) {\n      for (var j = 14; j < Object.values(students[i]).length - 11; j++) {\n        Scores.push(Object.values(students[i])[j]);\n      } //need to store all column title: value\n      //then need column title in a single array and values in another array\n\n    }\n  }\n\n  ;\n}\n\nvar UsersOverview = /*#__PURE__*/function (_React$Component) {\n  _inherits(UsersOverview, _React$Component);\n\n  function UsersOverview(props) {\n    var _this;\n\n    _classCallCheck(this, UsersOverview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UsersOverview).call(this, props));\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(UsersOverview, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _ref;\n\n      this.myChart = new Chart(this.canvasRef.current, {\n        type: 'scatter',\n        data: {\n          datasets: [(_ref = {\n            //input data\n            label: 'Mean Start time of sheets vs Progress Grade',\n            data: dataNeed,\n            trendlineLinear: {\n              style: \"rgb(0 ,0 ,0)\",\n              lineStyle: \"solid\",\n              width: 3\n            },\n            backgroundColor: '#0000cc',\n            borderColor: '#0000cc',\n            borderWidth: 1\n          }, _defineProperty(_ref, \"borderColor\", '#0000cc'), _defineProperty(_ref, \"hoverBorderWidth\", 3), _defineProperty(_ref, \"hoverBorderColor\", '#00'), _defineProperty(_ref, \"fill\", false), _defineProperty(_ref, \"showLine\", false), _ref)]\n        },\n        options: {\n          title: {\n            display: true,\n            text: 'Mean Start time of sheets 1-8 vs Progress Grade',\n            fontSize: 25\n          },\n          scales: {\n            xAxes: [{\n              display: true,\n              scaleLabel: {\n                display: true,\n                labelString: 'Progress Test Score Marks(%)'\n              }\n            }],\n            yAxes: [{\n              display: true,\n              scaleLabel: {\n                display: true,\n                labelString: 'Mean Start Time of Sheets after Lecture'\n              }\n            }]\n          },\n          legend: {\n            //display: flase, doesn't display legend\n            position: 'right',\n            display: false,\n            labels: {\n              fontColor: '#000'\n            }\n          },\n          layout: {\n            padding: {\n              left: 50,\n              right: 50,\n              bottom: 0,\n              top: 0\n            }\n          } // tooltips:{ to hide tooltips that show when hovering over graph\n          //     enabled: false\n          // },\n\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 8\n        }\n      });\n    }\n  }]);\n\n  return UsersOverview;\n}(React.Component);\n\nexport default UsersOverview;","map":{"version":3,"sources":["C:/Users/Emman/Documents/ME4/FYP/FinalDash/shards-dashboard-react/src/components/blog/UsersOverview.js"],"names":["React","PropTypes","Row","Col","Card","CardHeader","CardBody","Button","RangeDatePicker","Chart","d3","csv","then","makeChart","students","ColumnTitle","i","Object","keys","length","push","Scores","nameField","j","values","UsersOverview","props","canvasRef","createRef","myChart","current","type","data","datasets","label","dataNeed","trendlineLinear","style","lineStyle","width","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","scales","xAxes","scaleLabel","labelString","yAxes","legend","position","labels","fontColor","layout","padding","left","right","bottom","top","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\n\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport Chart from \"../../utils/chart\";\n\n// function getUserName() {\n//   var nameField = document.getElementById('nameField').value;\n//   var result = document.getElementById('result');\n\n//   let myChart = document.getElementById('myChart').getContext('2d');\n\n  d3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/Y1_all_20210409_anonymous.csv\") // request csv file\n  .then(makeChart); // converts into an array then call makeChart() function\n\n  // calls function to make a chart after it has been converted into an array\n  function makeChart(students) { \n          // }\n          //make dictionary for tutorial sheets - put in same order as csv\n          var ColumnTitle = [];\n          for (var i=14; i<Object.keys(students[0]).length - 11; i++){\n              ColumnTitle.push(Object.keys(students[0])[i])\n          }\n          var Scores = [];\n          // for loop to check and calculate the days after lecture when students started tutorial sheet\n          for (var i =0; i < students.length; i++){\n              if (students[i][\"Student ID\"] === nameField){\n                  for (var j=14; j<Object.values(students[i]).length - 11; j++){\n                      Scores.push(Object.values(students[i])[j])\n                  }\n                      //need to store all column title: value\n                      //then need column title in a single array and values in another array\n              } \n          };\n      }\n\nclass UsersOverview extends React.Component {\nconstructor(props) {\nsuper(props);\nthis.canvasRef = React.createRef();\n}\n\ncomponentDidMount() {\nthis.myChart = new Chart(this.canvasRef.current, {\ntype: 'scatter',\ndata: {\n  datasets: [{ //input data\n      label: 'Mean Start time of sheets vs Progress Grade',\n      data: dataNeed, \n      trendlineLinear: {\n          style: \"rgb(0 ,0 ,0)\",\n          lineStyle: \"solid\",\n          width: 3\n      },\n      backgroundColor: '#0000cc',\n      borderColor: '#0000cc',\n      borderWidth: 1,\n      borderColor: '#0000cc',\n      hoverBorderWidth: 3,\n      hoverBorderColor: '#00',\n      fill : false,\n      showLine: false\n  },\n]\n},\noptions: {\n  title: {\n      display: true,\n      text: 'Mean Start time of sheets 1-8 vs Progress Grade',\n      fontSize: 25\n  },\n  scales: {\n      xAxes: [{\n          display: true,\n          scaleLabel: {\n              display: true,\n              labelString: 'Progress Test Score Marks(%)'\n          }\n      }],\n      yAxes: [{\n          display: true,\n          scaleLabel: {\n              display: true,\n              labelString: 'Mean Start Time of Sheets after Lecture'\n          }\n      }]\n  },\n  legend: {\n      //display: flase, doesn't display legend\n      position: 'right',\n      display: false,\n      labels: {\n          fontColor: '#000'\n      }\n  },\n  layout: {\n      padding: {\n          left: 50,\n          right: 50,\n          bottom: 0,\n          top:0\n      }\n  },\n  // tooltips:{ to hide tooltips that show when hovering over graph\n  //     enabled: false\n  // },\n}\n\n});\n}\n\nrender() {\nreturn <canvas ref={this.canvasRef} />;\n}\n}\n\n\nexport default UsersOverview;"]},"metadata":{},"sourceType":"module"}