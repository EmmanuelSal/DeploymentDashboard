{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\src\\\\components\\\\2020Graphs\\\\MinSheetAccessed.js\";\nimport React from 'react';\nimport Chart from \"../../utils/chart\";\nimport * as d3 from \"d3\";\nvar Sheet = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\"];\nvar dictAbg = [];\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/gb_FMX2_2020_Sets1_15_20210309_anon.csv\") // request csv file\n.then(makeChart); // converts into an array then call makeChart() function\n// calls function to make a chart after it has been converted into an array\n\nfunction makeChart(students) {\n  // takes in an array of students\n  //make dictionary\n  var dict = {\n    Min0: 0,\n    Min1: 0,\n    Min2: 0,\n    Min3: 0,\n    Min4: 0,\n    Min5: 0,\n    Min6: 0,\n    Min7: 0,\n    Min8: 0,\n    Min9: 0,\n    Min10: 0,\n    Min11: 0,\n    Min12: 0,\n    Min13: 0,\n    Min14: 0,\n    Min15: 0,\n    Min16: 0,\n    Min17: 0,\n    Min18: 0\n  };\n\n  for (var i = 0; i < students.length; i++) {\n    var count = 0;\n\n    for (var j = 10; j <= 96; j += 5) {\n      var key = Object.keys(students[i])[j];\n      console.log(key);\n      var value = students[i][key];\n\n      if (value > 0) {\n        count++;\n      }\n    }\n\n    key = Object.keys(dict)[count];\n    dict[key]++;\n  }\n\n  ; // works out the cumulative sum of students\n\n  var cumulativeSum = function (sum) {\n    return function (value) {\n      return sum += value;\n    };\n  }(0);\n\n  var dict2 = Object.values(dict).reverse().map(cumulativeSum).reverse();\n  var dictAvg = dict2.map(function (d) {\n    return Math.round(d / students.length * 100);\n  });\n  dictAvg.shift(); // removes the first index\n\n  var Sheet = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\"];\n}\n\nvar MinSheetAccessed = /*#__PURE__*/function (_React$Component) {\n  _inherits(MinSheetAccessed, _React$Component);\n\n  function MinSheetAccessed(props) {\n    var _this;\n\n    _classCallCheck(this, MinSheetAccessed);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MinSheetAccessed).call(this, props));\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(MinSheetAccessed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _ref;\n\n      this.myChart = new Chart(this.canvasRef.current, _defineProperty({\n        type: 'bar',\n        options: {\n          title: {\n            display: true,\n            text: 'ME2 Fluids 2020 Progress Test: Average % Score per Question',\n            fontSize: 10\n          },\n          legend: {\n            //display: flase, doesn't display legend\n            position: 'right',\n            labels: {\n              fontColor: '#000'\n            }\n          }\n        },\n        data: {\n          labels: Sheet,\n          //sets y axis to student names \n          datasets: [(_ref = {\n            //input data\n            label: 'Tutorial Sheet',\n            data: dictAvg,\n            //converts total score to a percentage\n            backgroundColor: '#0000cc',\n            borderColor: '#0000cc',\n            borderWidth: 1\n          }, _defineProperty(_ref, \"borderColor\", '#777'), _defineProperty(_ref, \"hoverBorderWidth\", 3), _defineProperty(_ref, \"hoverBorderColor\", '#00'), _ref)]\n        }\n      }, \"options\", _defineProperty({\n        title: {\n          display: true,\n          text: 'Proportion of sheets accessed by Students 2020',\n          fontSize: 25\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Month'\n            }\n          }],\n          yAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Value'\n            }\n          }]\n        },\n        legend: {\n          //display: flase, doesn't display legend\n          position: 'right',\n          display: false,\n          labels: {\n            fontColor: '#000'\n          }\n        },\n        layout: {\n          padding: {\n            left: 50,\n            right: 50,\n            bottom: 0,\n            top: 0\n          }\n        }\n      }, \"scales\", {\n        yAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Proportion of students(%)',\n            fontSize: 30\n          },\n          ticks: {\n            beginAtZero: true\n          }\n        }],\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Minimum no. of sheets accessed',\n            fontSize: 30\n          },\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 14\n        }\n      });\n    }\n  }]);\n\n  return MinSheetAccessed;\n}(React.Component);\n\nexport default MinSheetAccessed;","map":{"version":3,"sources":["C:/Users/Emman/Documents/ME4/FYP/FinalDash/shards-dashboard-react/src/components/2020Graphs/MinSheetAccessed.js"],"names":["React","Chart","d3","Sheet","dictAbg","csv","then","makeChart","students","dict","Min0","Min1","Min2","Min3","Min4","Min5","Min6","Min7","Min8","Min9","Min10","Min11","Min12","Min13","Min14","Min15","Min16","Min17","Min18","i","length","count","j","key","Object","keys","console","log","value","cumulativeSum","sum","dict2","values","reverse","map","dictAvg","d","Math","round","shift","MinSheetAccessed","props","canvasRef","createRef","myChart","current","type","options","title","display","text","fontSize","legend","position","labels","fontColor","data","datasets","label","backgroundColor","borderColor","borderWidth","scales","xAxes","scaleLabel","labelString","yAxes","layout","padding","left","right","bottom","top","ticks","beginAtZero","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\n\r\nvar Sheet = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\"]\r\nvar dictAbg = [];\r\nd3.csv(\"https://graphtest123.s3.eu-west-2.amazonaws.com/gb_FMX2_2020_Sets1_15_20210309_anon.csv\") // request csv file\r\n.then(makeChart); // converts into an array then call makeChart() function\r\n\r\n// calls function to make a chart after it has been converted into an array\r\nfunction makeChart(students) { // takes in an array of students\r\n\r\n    //make dictionary\r\n    var dict = {Min0:0 , Min1:0 , Min2:0 ,Min3:0, Min4:0, Min5:0, Min6:0, Min7:0, Min8:0, Min9:0, Min10:0, Min11:0, Min12:0, Min13:0, Min14:0, Min15:0, Min16:0, Min17:0, Min18:0 };\r\n\r\n    for (var i =0; i < students.length; i++){\r\n        var count = 0;\r\n        for (var j =10; j <= 96; j += 5){\r\n            var key = Object.keys(students[i])[j];\r\n            console.log(key)\r\n            var value = students[i][key]\r\n            if (value > 0){\r\n                count ++;\r\n            }\r\n        }\r\n        key = Object.keys(dict)[count];\r\n        dict[key]++\r\n    };\r\n    // works out the cumulative sum of students\r\n    const cumulativeSum = (sum => value => sum += value)(0);\r\n    var dict2 = Object.values(dict).reverse().map(cumulativeSum).reverse();\r\n\r\n    var dictAvg = dict2.map(function(d) {\r\n        return Math.round((d / students.length) * 100)\r\n    })\r\n\r\n    dictAvg.shift(); // removes the first index\r\n\r\n    var Sheet = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\"]\r\n}\r\n\r\nclass MinSheetAccessed extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'bar',\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'ME2 Fluids 2020 Progress Test: Average % Score per Question',\r\n                fontSize: 10\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n        },\r\n        data: {\r\n            labels: Sheet, //sets y axis to student names \r\n            datasets: [{ //input data\r\n                label: 'Tutorial Sheet',\r\n                data: dictAvg, //converts total score to a percentage\r\n                backgroundColor: '#0000cc',\r\n                borderColor: '#0000cc',\r\n                borderWidth: 1,\r\n                borderColor: '#777',\r\n                hoverBorderWidth: 3,\r\n                hoverBorderColor: '#00'\r\n            }]\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Proportion of sheets accessed by Students 2020',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Month'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Value'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n            // tooltips:{ to hide tooltips that show when hovering over graph\r\n            //     enabled: false\r\n            // },\r\n            scales: {\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Proportion of students(%)',\r\n                        fontSize: 30\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Minimum no. of sheets accessed',\r\n                        fontSize: 30\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default MinSheetAccessed;\r\n"]},"metadata":{},"sourceType":"module"}