{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emman\\\\Documents\\\\ME4\\\\FYP\\\\FinalDash\\\\shards-dashboard-react\\\\src\\\\components\\\\2020Graphs\\\\AvgTimeToCompleteSheet.js\";\nimport React from 'react';\nimport Chart from \"../../utils/chart\";\nimport * as d3 from \"d3\";\nvar binCount = [];\n\nvar AvgTimeToComplete2020 = /*#__PURE__*/function (_React$Component) {\n  _inherits(AvgTimeToComplete2020, _React$Component);\n\n  function AvgTimeToComplete2020(props) {\n    var _this;\n\n    _classCallCheck(this, AvgTimeToComplete2020);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AvgTimeToComplete2020).call(this, props));\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(AvgTimeToComplete2020, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _Chart;\n\n      this.myChart = new Chart(this.canvasRef.current, (_Chart = {\n        type: 'bar',\n        options: {\n          title: {\n            display: true,\n            text: 'ME2 Fluids 2020 Progress Test: Average % Score per Question',\n            fontSize: 10\n          },\n          legend: {\n            //display: flase, doesn't display legend\n            position: 'right',\n            labels: {\n              fontColor: '#000'\n            }\n          }\n        },\n        data: {\n          labels: [\"[0,9]\", \"[9,16]\", \"[16,23]\", \"[23,30]\", \"[30,37]\", \"[37,44]\", \"[44,51]\", \"[51,58]\", \"[58,65]\", \"[65, 72]\", \"[72,79]\", \"[79,86]\", \"[86,93]\", \"[93,100]\", \"[100,107]\", \"[107,114]\", \"[114,121]\", \"[121,129]\"],\n          datasets: [{\n            label: 'Average time taken after lecture to complete all tutorial sheets',\n            data: binCount,\n            backgroundColor: ['#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc'],\n            borderColor: ['#0000cc'],\n            borderWidth: 1\n          }]\n        }\n      }, _defineProperty(_Chart, \"options\", {\n        responsive: false,\n        scales: {\n          xAxes: [{\n            ticks: {\n              maxRotation: 90,\n              minRotation: 80\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }), _defineProperty(_Chart, \"options\", {\n        title: {\n          display: true,\n          text: 'Average time taken in days after lecture to Complete All Tutorial Sheets',\n          fontSize: 25\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Average Time Taken to Complete Tutorial Sheets After Lecture'\n            }\n          }],\n          yAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Frequency'\n            }\n          }]\n        },\n        legend: {\n          //display: flase, doesn't display legend\n          position: 'right',\n          display: false,\n          labels: {\n            fontColor: '#000'\n          }\n        },\n        layout: {\n          padding: {\n            left: 50,\n            right: 50,\n            bottom: 0,\n            top: 0\n          }\n        }\n      }), _Chart));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 14\n        }\n      });\n    }\n  }]);\n\n  return AvgTimeToComplete2020;\n}(React.Component);\n\nexport default AvgTimeToComplete2020;","map":{"version":3,"sources":["C:/Users/Emman/Documents/ME4/FYP/FinalDash/shards-dashboard-react/src/components/2020Graphs/AvgTimeToCompleteSheet.js"],"names":["React","Chart","d3","binCount","AvgTimeToComplete2020","props","canvasRef","createRef","myChart","current","type","options","title","display","text","fontSize","legend","position","labels","fontColor","data","datasets","label","backgroundColor","borderColor","borderWidth","responsive","scales","xAxes","ticks","maxRotation","minRotation","yAxes","beginAtZero","scaleLabel","labelString","layout","padding","left","right","bottom","top","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Chart from \"../../utils/chart\";\r\nimport * as d3 from \"d3\";\r\n\r\nvar binCount = [];\r\n\r\nclass AvgTimeToComplete2020 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'bar',\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'ME2 Fluids 2020 Progress Test: Average % Score per Question',\r\n                fontSize: 10\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n        },\r\n        data: {\r\n          labels: [\"[0,9]\", \"[9,16]\", \"[16,23]\", \"[23,30]\", \"[30,37]\", \"[37,44]\", \"[44,51]\", \"[51,58]\", \"[58,65]\", \"[65, 72]\", \"[72,79]\", \"[79,86]\", \"[86,93]\", \"[93,100]\", \"[100,107]\", \"[107,114]\", \"[114,121]\", \"[121,129]\"],\r\n          datasets: [{\r\n            label: 'Average time taken after lecture to complete all tutorial sheets',\r\n            data: binCount,\r\n            backgroundColor: [\r\n                '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc', '#0000cc'\r\n\r\n            ],\r\n            borderColor: [\r\n                '#0000cc',\r\n            ],\r\n            borderWidth: 1\r\n            }]\r\n        },\r\n        options: {\r\n            responsive: false,\r\n            scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                maxRotation: 90,\r\n                minRotation: 80\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                beginAtZero: true\r\n                }\r\n            }]\r\n            }\r\n        },\r\n        options: {\r\n            title: {\r\n                display: true,\r\n                text: 'Average time taken in days after lecture to Complete All Tutorial Sheets',\r\n                fontSize: 25\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Average Time Taken to Complete Tutorial Sheets After Lecture'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Frequency'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                //display: flase, doesn't display legend\r\n                position: 'right',\r\n                display: false,\r\n                labels: {\r\n                    fontColor: '#000'\r\n                }\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 50,\r\n                    right: 50,\r\n                    bottom: 0,\r\n                    top:0\r\n                }\r\n            },\r\n        }\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.canvasRef} />;\r\n    }\r\n  }\r\n\r\n\r\nexport default AvgTimeToComplete2020;\r\n"]},"metadata":{},"sourceType":"module"}